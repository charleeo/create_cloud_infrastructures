version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the job we want to run for this project
commands:
  destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name failedStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name failedStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  
  # Exercise: Config and Deployment
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["56:1f:47:e1:c2:ba:51:bd:05:07:2d:4f:87:e2:ca:33"]
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           # install the dependencies needed for your playbook
  #           apk add --update ansible 
  #     - run:
  #         name: Configure server
  #         command: |
  #           ansible-playbook -i inventory.txt main.yml
  

  smoke_test:
  docker:
    - image: alpine:latest
  steps:
    - run: apk add --update curl
    - run:
        name: smoke test
        command: |
          URL="https://blog.udacity.com/"
          # Test if website exists
          if curl -s --head ${URL} 
          then
            return 0
          else
            return 1
          fi
    - destroy_environment


# Sequential workflow
workflows:
  # Name the workflow
  rollbacktest:
    jobs:
      - create_infrastructure
      - smoke_test
      # - configure_infrastructure
